name: Copilot Setup Steps

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:8.1
        ports:
          - '3306:3306'
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: digital
          MYSQL_PASSWORD: password
        volumes:
          - ./my.cnf:/etc/mysql/conf.d/my.cnf

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/prepare
      - name: Install dependencies (ensure lockfile)
        run: pnpm install --frozen-lockfile

      - name: Create .env file for Copilot
        run: |
          # Use the e2e env which contains test-friendly defaults in CI
          if [ -f .env.e2e ]; then
            cp .env.e2e .env
            echo "‚úì Copied .env.e2e to .env"
          elif [ -f .env.sample ]; then
            cp .env.sample .env
            echo "‚úì Copied .env.sample to .env"
          else
            echo "‚ö†Ô∏è No .env.e2e or .env.sample found"
            exit 1
          fi

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping --silent; then
              echo "‚úì MySQL is ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "‚ùå MySQL failed to start within expected time"
              exit 1
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: Set up database with Prisma
        env:
          DATABASE_URL: mysql://root:rootpass@127.0.0.1:3306/digital
        run: |
          echo "Setting up database schema and seeding..."
          PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=1 pnpm prisma migrate reset --force --skip-generate
          echo "‚úì Database reset and seeded successfully"

      - name: Verify database connection
        env:
          DATABASE_URL: mysql://root:rootpass@127.0.0.1:3306/digital
        run: |
          echo "Verifying database connection..."
          pnpm prisma db pull --print
          echo "‚úì Database connection verified"

      - name: Build frontend (optional verification)
        run: |
          echo "Building frontend to verify setup..."
          pnpm build:e2e
          echo "‚úì Frontend build successful"

      - name: Build backend (optional verification)
        run: |
          echo "Building backend to verify setup..."
          pnpm server:build
          echo "‚úì Backend build successful"

      - name: Summary
        run: |
          echo "üéâ Environment setup completed successfully!"
          echo "‚úì Node.js $(node --version)"
          echo "‚úì pnpm $(pnpm --version)"
          echo "‚úì Dependencies installed"
          echo "‚úì Environment variables configured"
          echo "‚úì MySQL database ready"
          echo "‚úì Prisma schema migrated and seeded"
          echo "‚úì Frontend and backend builds verified"
