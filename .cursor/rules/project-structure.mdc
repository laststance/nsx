---
description: 
globs: 
alwaysApply: false
---
# Project Structure

NSX is organized as a full-stack TypeScript application with a React frontend and Express backend.

## Key Directories

- **Frontend**: The [src](mdc:src) directory contains the React application
  - [components](mdc:src/components): Reusable UI components
  - [pages](mdc:src/pages): Page components that represent routes
  - [redux](mdc:src/redux): Redux state management with Redux Toolkit
  - [hooks](mdc:src/hooks): Custom React hooks
  - [lib](mdc:src/lib): Shared frontend utilities
  
- **Backend**: The [server](mdc:server) directory contains the Express application
  - [routes](mdc:server/routes): API endpoints
  - [lib](mdc:server/lib): Server utilities
  - [index.ts](mdc:server/index.ts): Server entry point
  - [cron.ts](mdc:server/cron.ts): Scheduled tasks
  
- **Database**: The [prisma](mdc:prisma) directory contains the Prisma ORM configuration
  - [schema.prisma](mdc:prisma/schema.prisma): Database schema definition
  - [migrations](mdc:prisma/migrations): Database migrations
  
- **Testing**: The [e2e](mdc:e2e) directory contains end-to-end tests using Playwright

## Main Entry Points

- Frontend: [src/main.tsx](mdc:src/main.tsx)
- Backend: [server/index.ts](mdc:server/index.ts)

## Important Configuration Files

- [vite.config.ts](mdc:vite.config.ts): Frontend build configuration
- [tsconfig.json](mdc:tsconfig.json): TypeScript configuration
- [package.json](mdc:package.json): Project dependencies and scripts
- [compose.yml](mdc:compose.yml): Docker configuration
