---
description: 
globs: 
alwaysApply: true
---
# Express Backend

The backend of NSX is built with Express.js, Prisma ORM, and JWT authentication.

## Server Structure

- [index.ts](mdc:server/index.ts): Server entry point and middleware setup
- [api.ts](mdc:server/api.ts): API route configuration
- [auth.ts](mdc:server/auth.ts): Authentication logic
- [cron.ts](mdc:server/cron.ts): Scheduled tasks for automatic post creation

## API Routes

API routes are organized in the [routes](mdc:server/routes) directory:

- **Posts**: CRUD operations for blog posts
- **Stocks**: Management of saved web pages
- **Authors**: User management and authentication

## Database Access

Prisma ORM is used for database access:

- [prisma.ts](mdc:server/prisma.ts): Prisma client initialization
- Schema defined in [schema.prisma](mdc:prisma/schema.prisma)

## Authentication

JWT-based authentication:

- Token generation and validation in [auth.ts](mdc:server/auth.ts)
- Protected routes middleware
- HTTP-only cookies for secure token storage

## Scheduled Tasks

A daily cron job runs at midnight to:

1. Fetch all saved web pages
2. Create a post with links to these pages
3. Clear the saved pages

The implementation is in [cron.ts](mdc:server/cron.ts).
